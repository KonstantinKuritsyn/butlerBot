"""
–ú–æ–¥—É–ª—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import datetime

class KeyboardBuilder:
    
    @staticmethod
    def main_menu():
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
        keyboard = [
            [
                InlineKeyboardButton("üå§Ô∏è –ü–æ–≥–æ–¥–∞", callback_data="action|weather"),
                InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="action|my_tasks")
            ],
            [
                InlineKeyboardButton("‚ûï –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –¥–µ–ª–æ", callback_data="action|add_daily")
            ],
            [
                InlineKeyboardButton("‚è∞ –†–∞–∑–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="action|add_reminder")
            ],
            [
                InlineKeyboardButton("‚ùì –°–ø—Ä–∞–≤–∫–∞", callback_data="action|help"),
                InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="action|settings")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def tasks_menu(daily_tasks=None, one_time_tasks=None):
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏"""
        keyboard = []
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏
        if daily_tasks:
            keyboard.append([
                InlineKeyboardButton("üìÖ –£–ø—Ä–∞–≤–ª—è—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–º–∏", callback_data="manage|daily_tasks")
            ])
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑–æ–≤—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏  
        if one_time_tasks:
            keyboard.append([
                InlineKeyboardButton("‚è∞ –£–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏", callback_data="manage|one_time_tasks")
            ])
        
        # –ö–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –∑–∞–¥–∞—á
        if not daily_tasks and not one_time_tasks:
            keyboard.extend([
                [
                    InlineKeyboardButton("‚ûï –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –¥–µ–ª–æ", callback_data="action|add_daily")
                ],
                [
                    InlineKeyboardButton("‚è∞ –†–∞–∑–æ–≤–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data="action|add_reminder")
                ]
            ])
        
        # –ö–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤—Å–µ–≥–¥–∞
        keyboard.append([
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="action|main_menu")
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def daily_tasks_list(tasks):
        """–°–ø–∏—Å–æ–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        keyboard = []
        
        for task in tasks:
            # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            task_name = task['task_name']
            if len(task_name) > 20:
                task_name = task_name[:17] + "..."
            
            keyboard.append([
                InlineKeyboardButton(
                    f"üìù {task_name} ({task['time']})",
                    callback_data=f"view_daily|{task['id']}"
                )
            ])
        
        keyboard.extend([
            [
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë", callback_data="action|add_daily")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–¥–∞—á–∞–º", callback_data="action|my_tasks")
            ]
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def one_time_tasks_list(tasks):
        """–°–ø–∏—Å–æ–∫ —Ä–∞–∑–æ–≤—ã—Ö –∑–∞–¥–∞—á –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
        keyboard = []
        
        for task in tasks:
            # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            task_name = task['task_name']
            if len(task_name) > 15:
                task_name = task_name[:12] + "..."
            
            try:
                dt = datetime.datetime.fromisoformat(task['scheduled_datetime'])
                formatted_dt = dt.strftime("%d.%m %H:%M")
                keyboard.append([
                    InlineKeyboardButton(
                        f"‚è∞ {task_name} ({formatted_dt})",
                        callback_data=f"view_one_time|{task['id']}"
                    )
                ])
            except:
                keyboard.append([
                    InlineKeyboardButton(
                        f"‚è∞ {task_name}",
                        callback_data=f"view_one_time|{task['id']}"
                    )
                ])
        
        keyboard.extend([
            [
                InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –µ—â—ë", callback_data="action|add_reminder")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–¥–∞—á–∞–º", callback_data="action|my_tasks")
            ]
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def task_detail_menu(task_id, task_type):
        """–ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞–¥–∞—á–∏"""
        keyboard = [
            [
                InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete|{task_type}|{task_id}")
            ],
            [
                InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", callback_data=f"manage|{task_type}_tasks")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def confirm_delete(task_id, task_type):
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏"""
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete|{task_type}|{task_id}"),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"view_{task_type}|{task_id}")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def settings_menu(weather_enabled=True, weather_time="08:30"):
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        status_text = "üîî –í–∫–ª—é—á–µ–Ω—ã" if weather_enabled else "üîï –í—ã–∫–ª—é—á–µ–Ω—ã"
        keyboard = [
            [
                InlineKeyboardButton(f"üå§Ô∏è –ü–æ–≥–æ–¥–∞: {status_text}", callback_data="toggle|weather_notifications")
            ],
            [
                InlineKeyboardButton(f"‚è∞ –í—Ä–µ–º—è –ø–æ–≥–æ–¥—ã: {weather_time}", callback_data="set|weather_time")
            ],
            [
                InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="action|main_menu")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def weather_time_menu():
        """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–≥–æ–¥—ã"""
        times = ["07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00"]
        keyboard = []
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –ø–æ 2 –∫–Ω–æ–ø–∫–∏
        for i in range(0, len(times), 2):
            row = []
            for j in range(i, min(i + 2, len(times))):
                row.append(InlineKeyboardButton(
                    times[j], 
                    callback_data=f"set_time|{times[j]}"
                ))
            keyboard.append(row)
        
        keyboard.append([
            InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="action|settings")
        ])
        
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def back_to_menu():
        """–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        keyboard = [
            [InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="action|main_menu")]
        ]
        return InlineKeyboardMarkup(keyboard)
