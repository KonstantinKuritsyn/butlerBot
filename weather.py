"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–≥–æ–¥–æ–π

–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ WeatherAPI
–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ:
- –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤–æ–∑–¥—É—Ö–∞ –∏ –æ—â—É—â–∞–µ–º–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
- –°–∫–æ—Ä–æ—Å—Ç–∏ –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞  
- –ü–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –∏ –æ—Å–∞–¥–∫–æ–≤
- –í–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞

–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥ (56.313398, 44.051441)
"""
import requests
import os
from dotenv import load_dotenv

load_dotenv()

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
NIZHNY_NOVGOROD_COORDS = "56.313398,44.051441"
API_BASE_URL = "https://api.weatherapi.com/v1/forecast.json"

# –ü–æ—Ä–æ–≥–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ–¥–µ–∂–¥—ã
TEMP_THRESHOLDS = {
    'HOT': 25,
    'WARM': 18,
    'MILD': 15,
    'COOL': 10,
    'COLD': 5,
    'VERY_COLD': -5
}

# –ü–æ—Ä–æ–≥–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–µ—Ç—Ä–∞
WIND_THRESHOLDS = {
    'STRONG': 20,
    'MODERATE': 10
}

class WeatherService:
    def __init__(self):
        self.api_key = os.environ.get('WEATHER_API_TOKEN')
        self.base_url = API_BASE_URL
        self.location = NIZHNY_NOVGOROD_COORDS
    
    def get_weather_data(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"""
        try:
            params = {
                'key': self.api_key,
                'q': self.location,
                'lang': 'ru',
                'days': 1
            }
            
            response = requests.get(self.base_url, params=params)
            response.raise_for_status()
            return response.json()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: {e}")
            return None
    
    def get_clothing_recommendation(self, temp_c, feels_like_c, wind_kph, condition):
        """–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –æ–¥–µ–∂–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–≥–æ–¥—ã"""
        clothing = []
        
        # –ë–∞–∑–æ–≤–∞—è –æ–¥–µ–∂–¥–∞ –ø–æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –æ—â—É—â–µ–Ω–∏—è
        if feels_like_c >= TEMP_THRESHOLDS['HOT']:
            clothing.append("üëï —Ñ—É—Ç–±–æ–ª–∫–∞")
        elif feels_like_c >= TEMP_THRESHOLDS['WARM']:
            clothing.append("üëï —Ñ—É—Ç–±–æ–ª–∫–∞ –∏ –ª–µ–≥–∫–∞—è —Ä—É–±–∞—à–∫–∞")
        elif feels_like_c >= TEMP_THRESHOLDS['MILD']:
            clothing.append("üëî –ª–µ–≥–∫–∞—è –∫–æ—Ñ—Ç–∞")
        elif feels_like_c >= TEMP_THRESHOLDS['COOL']:
            clothing.append("üß• —Ç—ë–ø–ª–∞—è —Ç–æ–ª—Å—Ç–æ–≤–∫–∞ –∏–ª–∏ —Å–≤–∏—Ç–µ—Ä")
        elif feels_like_c >= TEMP_THRESHOLDS['COLD']:
            clothing.append("üß• –≤–µ—Å–µ–Ω–Ω—è—è –∫—É—Ä—Ç–∫–∞")
        elif feels_like_c >= TEMP_THRESHOLDS['VERY_COLD']:
            clothing.append("üß• –¥–µ–º–∏—Å–µ–∑–æ–Ω–Ω–∞—è –∫—É—Ä—Ç–∫–∞")
        else:
            clothing.append("üß• –∑–∏–º–Ω—è—è –∫—É—Ä—Ç–∫–∞")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–µ—Ç—Ä—É
        if wind_kph > WIND_THRESHOLDS['STRONG']:
            clothing.append("üå™Ô∏è —á—Ç–æ-—Ç–æ –æ—Ç –≤–µ—Ç—Ä–∞ (—Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä)")
        elif wind_kph > WIND_THRESHOLDS['MODERATE']:
            clothing.append("üå™Ô∏è –ª–µ–≥–∫–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –≤–µ—Ç—Ä–∞")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ—Å–∞–¥–∫–∞–º
        condition_lower = condition.lower()
        rain_keywords = ['–¥–æ–∂–¥—å', '–ª–∏–≤–µ–Ω—å', '–º–æ—Ä–æ—Å—å', '–¥–æ–∂–¥–ª–∏–≤–æ']
        snow_keywords = ['—Å–Ω–µ–≥', '–º–µ—Ç–µ–ª—å', '–≤—å—é–≥–∞', '—Å–Ω–µ–∂–Ω–æ']
        
        if any(word in condition_lower for word in rain_keywords):
            clothing.append("‚òÇÔ∏è –∑–æ–Ω—Ç –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫")
        elif any(word in condition_lower for word in snow_keywords):
            clothing.append("‚ùÑÔ∏è —Ç–µ–ø–ª–∞—è –∑–∏–º–Ω—è—è –æ–¥–µ–∂–¥–∞ —Å –∫–∞–ø—é—à–æ–Ω–æ–º")
        
        return clothing
    
    def format_weather_message(self):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ"""
        weather_data = self.get_weather_data()
        
        if not weather_data:
            return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ"
        
        try:
            current = weather_data['current']
            location = weather_data['location']
            
            temp_c = current['temp_c']
            feels_like_c = current['feelslike_c']
            condition = current['condition']['text']
            wind_kph = current['wind_kph']
            wind_dir = current['wind_dir']
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ
            clothing = self.get_clothing_recommendation(temp_c, feels_like_c, wind_kph, condition)
            
            message = f"""üå§Ô∏è *–ü–æ–≥–æ–¥–∞ –≤ {location['name']}*

üå°Ô∏è *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:* {temp_c}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like_c}¬∞C)
‚òÅÔ∏è *–ü–æ–≥–æ–¥–∞:* {condition}
üí® *–í–µ—Ç–µ—Ä:* {wind_kph} –∫–º/—á, {wind_dir}

üëî *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–¥–µ–∂–¥–µ:*
{chr(10).join([f"‚Ä¢ {item}" for item in clothing])}
"""
            
            return message
            
        except KeyError as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–≥–æ–¥—ã: {e}"
